The table Country represents countries and their key attributes. Its primary key, CountryKey, uniquely identifies each entry using the column Code (a 4-character code, VARCHAR(4)). The table includes the following columns: Name (VARCHAR(35)), which is a unique and non-null identifier for the country; Capital (VARCHAR(35)), specifying the capital city; Province (VARCHAR(35)), indicating a major administrative division; Area (FLOAT), representing the total land area; and Population (INT), denoting the number of inhabitants. Constraints ensure data validity: CountryArea requires the Area to be non-negative, and CountryPop ensures the Population is non-negative.
The table City represents cities and their geographical and demographic attributes. Its primary key, CityKey, uniquely identifies each entry using a combination of the columns Name (VARCHAR(35)), Country (VARCHAR(4)), and Province (VARCHAR(35)). The table includes the following columns: Population (INT), which records the number of inhabitants in the city; Longitude (FLOAT) and Latitude (FLOAT), which specify the city's geographical coordinates. Constraints ensure valid data: CityPop requires Population to be non-negative, CityLon ensures Longitude is within the valid range of -180 to 180, and CityLat ensures Latitude is within the valid range of -90 to 90.
The table Province represents provinces and their key attributes. Its primary key, PrKey, uniquely identifies each entry using a combination of the columns Name (VARCHAR(35)) and Country (a 4-character code, VARCHAR(4)). The table includes the following columns: Population (INT), which records the number of inhabitants; Area (FLOAT), specifying the province's size; Capital (VARCHAR(35)), indicating the capital city; and CapProv (VARCHAR(35)), which may denote a related province. Constraints ensure data validity: PrPop requires Population to be non-negative, and PrAr ensures that Area is non-negative.
The table Economy represents countries and their economic attributes. Its primary key, EconomyKey, uniquely identifies each entry using the column Country (a 4-character code, VARCHAR(4)). The table includes the following columns: GDP (FLOAT), which records the gross domestic product; Agriculture (FLOAT), indicating the agricultural sector's contribution; Service (FLOAT), representing the service sector's contribution; Industry (FLOAT), detailing the industrial sector's contribution; and Inflation (FLOAT), capturing the inflation rate. A constraint, EconomyGDP, ensures that the GDP value is non-negative.
The table Population captures data about countries and their demographic statistics. Its primary key, PopKey, uniquely identifies each entry using the column Country (a 4-character code, VARCHAR(4)). The table includes the following columns: Population_Growth (FLOAT), which measures the rate of population increase; and Infant_Mortality (FLOAT), which records the infant mortality rate. The column Country may also serve as a foreign key to connect with other tables.
The table Politics represents countries and their political attributes. Its primary key, PoliticsKey, uniquely identifies each entry using the column Country, which is a 4-character code (VARCHAR(4)). The table includes the following columns: Independence (DATE), which records the date of a country's independence; Dependent (VARCHAR(4)), indicating any dependency relationships; and Government (VARCHAR(120)), describing the type of government. The column Country also serves as a foreign key to connect with other tables.
The table Language represents languages spoken in various countries and their prevalence. Its primary key, LanguageKey, uniquely identifies each entry using a combination of the columns Name (VARCHAR(50)) and Country (a 4-character code, VARCHAR(4)). The table includes the following columns: Country, which specifies the country code; Name, which denotes the language name; and Percentage (FLOAT), indicating the percentage of the population that speaks the language. A constraint, LanguagePercent, ensures that the Percentage is greater than 0 and less than or equal to 100, maintaining valid data representation.
The table Religion captures information about religious demographics within countries. Its composite primary key, ReligionKey, uniquely identifies each entry using the combination of Name (VARCHAR(50)) and Country (a 4-character code, VARCHAR(4)). The table includes the following columns: Name, which specifies the religion; Country, indicating the country code; and Percentage (FLOAT), representing the proportion of the population adhering to the religion. A constraint, ReligionPercent, ensures that the Percentage is a positive value not exceeding 100.
The table EthnicGroup represents ethnic groups within countries and their demographic proportions. Its primary key, EthnicKey, uniquely identifies each entry using a combination of the columns Name (VARCHAR(50)) and Country (a 4-character code, VARCHAR(4)). The table includes the following columns: Country, which specifies the country code; Name, which denotes the name of the ethnic group; and Percentage (FLOAT), which indicates the percentage of the population that belongs to the ethnic group. A constraint, EthnicPercent, ensures that the Percentage is greater than 0 and less than or equal to 100, maintaining valid demographic data.
The table Continent represents continents and their geographical attributes. Its primary key, ContinentKey, uniquely identifies each entry using the column Name (VARCHAR(20)). The table includes the following column: Area (FLOAT(10)), which specifies the total area of the continent.
The table Borders represents the geographical boundaries between countries. Its primary key, BorderKey, uniquely identifies each entry using a combination of the columns Country1 and Country2, both of which are 4-character codes (VARCHAR(4)). The table includes the column Length (FLOAT), which specifies the length of the border between the two countries. A constraint ensures that the Length is always greater than zero, maintaining data integrity.
The table Encompasses represents the relationship between countries and continents, detailing the extent of a country's area within a continent. Its primary key, EncompassesKey, uniquely identifies each entry using a combination of the columns Country (a 4-character code, VARCHAR(4)) and Continent (VARCHAR(20)). The table includes the column Percentage (FLOAT), which specifies the percentage of the country's area that lies within the continent. A constraint ensures that the Percentage value is greater than 0 and less than or equal to 100, maintaining valid data entries.
The table Organization represents various organizations and their key details. Its primary key, Abbreviation, uniquely identifies each entry using a 12-character code (VARCHAR(12)). The table includes the following columns: Name (VARCHAR(80)), which stores the full name of the organization and must be unique; City (VARCHAR(35)), indicating the city where the organization is located; Country (VARCHAR(4)), specifying the country code; Province (VARCHAR(35)), detailing the province or state; and Established (DATE), recording the date the organization was founded. The constraint OrgNameUnique ensures that each organization's name is distinct within the table.
The table isMember captures the membership details of countries in various organizations. Its primary key, MemberKey, uniquely identifies each entry using a combination of the columns Country (a 4-character code, VARCHAR(4)) and Organization (a 12-character code, VARCHAR(12)). The table also includes the column Type (VARCHAR(35)), which specifies the nature of the membership, defaulting to 'member'.
The table Mountain represents mountains and their geographical characteristics. Its primary key, MountainKey, uniquely identifies each entry using the column Name (VARCHAR(35)). The table includes the following columns: Mountains (VARCHAR(35)), which may relate to a mountain range; Height (FLOAT), specifying the mountain's height; and Type (VARCHAR(10)), describing the mountain's classification. Geographical data is captured with Longitude (FLOAT) and Latitude (FLOAT) to pinpoint the mountain's location. A constraint ensures that the longitude and latitude values are within valid ranges.
The table Desert represents deserts and their geographical attributes. Its primary key, DesertKey, uniquely identifies each entry using the column Name (VARCHAR(35)). The table includes the following columns: Area (FLOAT), which specifies the size of the desert; Longitude (FLOAT) and Latitude (FLOAT), which capture the geographical coordinates of the desert. The DesCoord constraint ensures that the longitude and latitude values are within valid ranges.
The table Island represents islands and their geographical characteristics. Its primary key, IslandKey, uniquely identifies each entry using the column Name (VARCHAR(35)). The table includes the following columns: Islands (VARCHAR(35)), which may relate to a group of islands; Area (FLOAT), specifying the island's size; and Height (FLOAT), indicating the island's elevation. The Type column (VARCHAR(10)) describes the island's classification. Geographical data is captured with Longitude (FLOAT) and Latitude (FLOAT) columns. Constraints ensure valid data: IslandAr requires the Area to be non-negative, and IslandCoord ensures valid latitude and longitude values.
The table Lake represents lakes and their physical and geographical characteristics. Its primary key, LakeKey, uniquely identifies each entry using the column Name (VARCHAR(35)). The table includes the following columns: Area (FLOAT), which specifies the surface area of the lake; Depth (FLOAT), indicating the maximum depth; and Altitude (FLOAT), representing the elevation above sea level. The Type column (VARCHAR(10)) describes the lake's classification, while River (VARCHAR(35)) links the lake to a river. Longitude (FLOAT) and Latitude (FLOAT) capture the lake's geographical coordinates. Constraints ensure valid data: LakeAr requires the Area to be non-negative, LakeDpth ensures the Depth is non-negative, and LakeCoord enforces valid latitude and longitude values.
The table Sea represents seas and their characteristics. Its primary key, SeaKey, uniquely identifies each entry using the column Name (VARCHAR(35)). The table includes the following column: Depth (FLOAT), which specifies the depth of the sea. A constraint, SeaDepth, ensures that the Depth value is non-negative.
The table River represents rivers and their geographical attributes. Its primary key, RiverKey, uniquely identifies each entry using the column Name (VARCHAR(35)). It includes the following columns: River (VARCHAR(35)), related to another river; Lake (VARCHAR(35)), linked to a lake; Sea (VARCHAR(35)), associated with a sea; and Length (FLOAT), which specifies the river's length. Additional columns capture geographical data, such as SourceLongitude (FLOAT) and SourceLatitude (FLOAT) for the river's source, as well as EstuaryLongitude (FLOAT) and EstuaryLatitude (FLOAT) for its estuary. The Mountains (VARCHAR(35)) column indicates the mountain range where the river originates, and SourceAltitude (FLOAT) records the altitude of the source. Constraints ensure valid data: RiverLength requires Length to be non-negative, SourceCoord ensures valid latitude and longitude for the source, and EstCoord ensures valid latitude and longitude for the estuary.
The table Geo_Mountain represents mountains and their geographical locations. Its primary key, GMountainKey, uniquely identifies each entry using a combination of the columns Province (VARCHAR(35)), Country (a 4-character code, VARCHAR(4)), and Mountain (VARCHAR(35)). The table includes the following columns: Mountain, which specifies the name of the mountain; Country, indicating the country where the mountain is located; and Province, describing the specific province within the country. This structure allows for detailed identification of mountains by their geographical context.
The table Geo_Desert represents deserts and their geographical locations. Its primary key, GDesertKey, uniquely identifies each entry using a combination of the columns Province (VARCHAR(35)), Country (a 4-character code, VARCHAR(4)), and Desert (VARCHAR(35)). The table includes the following columns: Desert, which names the desert; Country, indicating the country code where the desert is located; and Province, specifying the province within the country. This structure allows for detailed identification of deserts by their specific geographical context.
The table Geo_Island represents islands and their administrative attributes. Its primary key, GIslandKey, uniquely identifies each entry using a combination of the columns Province (VARCHAR(35)), Country (a 4-character code, VARCHAR(4)), and Island (VARCHAR(35)). The table includes the following columns: Island, which specifies the name of the island; Country, indicating the country code; and Province, describing the administrative region. This structure allows for detailed identification and categorization of islands within their respective countries and provinces.
The table Geo_River represents rivers and their geographical locations. Its primary key, GRiverKey, uniquely identifies each entry using a combination of the columns Province (VARCHAR(35)), Country (a 4-character code, VARCHAR(4)), and River (VARCHAR(35)). The table includes the following columns: River, which names the river; Country, indicating the country code where the river is located; and Province, specifying the province within the country. This structure allows for detailed identification of rivers within specific regions.
The table Geo_Sea represents seas and their geographical associations with countries and provinces. Its primary key, GSeaKey, uniquely identifies each entry using a combination of the columns Province (VARCHAR(35)), Country (a 4-character code, VARCHAR(4)), and Sea (VARCHAR(35)). The table includes the following columns: Sea, which names the sea; Country, indicating the country code; and Province, specifying the province name. This structure allows for detailed mapping of seas to specific regions within countries.
The table Geo_Lake represents lakes and their geographical locations. Its primary key, GLakeKey, uniquely identifies each entry using a combination of the columns Province (VARCHAR(35)), Country (a 4-character code, VARCHAR(4)), and Lake (VARCHAR(35)). The table includes the following columns: Lake, which specifies the name of the lake; Country, indicating the country where the lake is located; and Province, detailing the specific province within the country. This structure allows for precise identification and categorization of lakes based on their geographical context.
The table Geo_Source captures information about the geographical origins of rivers. Its primary key, GSourceKey, uniquely identifies each entry using a combination of the columns Province (VARCHAR(35)), Country (a 4-character code, VARCHAR(4)), and River (VARCHAR(35)). The table includes the following columns: River, which specifies the name of the river; Country, indicating the country code; and Province, denoting the province where the river originates. This structure allows for detailed tracking of river sources across different regions.
The table Geo_Estuary represents estuaries and their geographical associations. Its primary key, GEstuaryKey, uniquely identifies each entry using a combination of the columns Province (VARCHAR(35)), Country (a 4-character code, VARCHAR(4)), and River (VARCHAR(35)). The table captures the relationship between rivers and their corresponding provinces and countries, providing a structured way to map estuaries to specific geographical locations.
The table MergesWith represents the relationship between seas that merge with each other. Its primary key, MergesWithKey, uniquely identifies each entry using a combination of the columns Sea1 and Sea2, both of which are VARCHAR(35). These columns specify the names of the two seas involved in the merging relationship.
The table Located represents geographical locations and their associations with various water bodies. It includes the following columns: City (VARCHAR(35)), which specifies the name of the city; Province (VARCHAR(35)), indicating the province where the city is situated; and Country (VARCHAR(4)), representing the country code. Additionally, the table captures relationships with water bodies through the columns River (VARCHAR(35)), Lake (VARCHAR(35)), and Sea (VARCHAR(35)), which associate the city with a river, lake, and sea, respectively. This table does not specify a primary key or constraints, focusing on the connections between cities and their surrounding geographical features.
The table LocatedOn represents the geographical relationship of cities to provinces, countries, and islands. Its primary key, LocatedOnKey, uniquely identifies each entry using a combination of the columns City (VARCHAR(35)), Province (VARCHAR(35)), Country (a 4-character code, VARCHAR(4)), and Island (VARCHAR(35)). This structure ensures that each city is distinctly associated with its respective province, country, and island.
The table IslandIn represents islands and their associated water bodies. It includes the following columns: Island (VARCHAR(35)), which names the island; Sea (VARCHAR(35)), indicating the sea associated with the island; Lake (VARCHAR(35)), specifying any lake connections; and River (VARCHAR(35)), denoting any river associations. This table does not specify a primary key or constraints, focusing on the relationships between islands and various water bodies.
The table MountainOnIsland represents the relationship between mountains and the islands they are located on. Its primary key, MntIslKey, uniquely identifies each entry using a combination of the columns Mountain and Island, both of which are VARCHAR(35). The Mountain column specifies the name of the mountain, while the Island column indicates the name of the island. This table captures the association between these geographical features.
